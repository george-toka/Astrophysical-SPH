Κατέληξα σε baseline κώδικα ο οποίος υλοποιεί
1) sph με gaussian kernel για πίεση
2) pairwise υπολογισμοί βαρύτητας με νόμο νεύτωνα
3) artificial viscosity για σταθεροποίηση του άστρου και της προσομοίωσης
και διαχείριση των shock waves 
4) adaptive timestep βασισμένο στο CFL Condition και επιλογή του timestep με αλγόριθμο 
που προτείνεται από αυτό το paper Particle Splitting: A New Method for SPH Star Formation Simulations 
για την κλιμάκωσή του όταν αυτό επιτρέπεται
5) μετρικές ΚΕ, ΔΕ, ορμής και στροφορμής.

-- έχουν δημιουργηθεί αρχικές συνθήκες και για περιστροφικές ταχύτητες για την περίπτωση των accretion disks 

Ο υπολογισμός της ΔΕ έγινε με τον κλασσικό τύπο G * m * M / r και με sph formulation
που προτείνει ο Monaghan και προκύπτει ακριβώς το ίδιο 

Το adaptive timestep είναι πολύ συντηρητικό αλλά εξασφαλίζει σταθερότητα μεταξύ δοκιμών διαφορετικών 
παραμέτρων ή αλγορίθμων που μπορεί να απαιτούν διαφορετικό timestep και γλυτώνει τη διαδικασία να 
ρυθμίζεται αυτό χειροκίνητα

Οι μόνοι προβληματισμοί που απασχόλησαν περισσότερο ήταν το πότε πρέπει να γίνεται η ενημέρωση του μεγέθους
του step και σε αυτόν τον αλγόριθμο γίνεται μετά από κάθε κύκλο Kick Drift Kick (Leapfrog Integrator). Δε βρέθηκε 
ακριβής τύπος που να υπολογίζει την ενέργεια που μετατρέπεται από κινητική σε εσωτερική/απώλειες
ώστε να σταθεροποιηθεί το άστρο, αν και στην ουσία η ενέργεια που χάνεται από το σύστημα βρίσκεται στο τέλος
συγκρίνοντας τη τελική τιμή της αρχικής και τελικής ολικής ενέργειας του συστήματος. Επίσης το σύστημα στην αρχή 
το σύστημα έχει κάποια ενέργεια (έστω μόνο δυναμική για μηδενικές αρχικές ταχύτητες) που δείχνουν το έργο που πρέπει
να καταναλωθεί για να τοποθετηθούν τα σωματίδια μέσα στον χώρο κατά αυτήν την διάταξη.

Μένει η υλοποίηση του adaptive smoothing length για σταθερό αριθμό γειτόνων. 
